// <auto-generated />
using System;
using HouseBug.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HouseBug.Migrations
{
    [DbContext(typeof(BudgetContext))]
    [Migration("20250626164243_AddCurrencyToTransaction")]
    partial class AddCurrencyToTransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("HouseBug.Models.AppSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");
                    
                    b.Property<string>("DefaultCurrency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutoBackup = false,
                            BackupFrequencyDays = 7,
                            BackupPath = "",
                            BudgetWarningPercentage = 80,
                            DarkMode = false,
                            DateFormat = "dd.MM.yyyy",
                            DefaultCurrency = "PLN",
                            EnableBudgetWarnings = true,
                            MonthlyBudgetLimit = 5000m,
                            ShowNotifications = true
                        });
                });

            modelBuilder.Entity("HouseBug.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#E74C3C",
                            Description = "Zakupy spożywcze i restauracje",
                            IsActive = true,
                            Name = "Jedzenie"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#3498DB",
                            Description = "Paliwo, bilety komunikacji publicznej",
                            IsActive = true,
                            Name = "Transport"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#9B59B6",
                            Description = "Kino, gry, hobby",
                            IsActive = true,
                            Name = "Rozrywka"
                        },
                        new
                        {
                            Id = 4,
                            Color = "#F39C12",
                            Description = "Czynsz, prąd, gaz, internet",
                            IsActive = true,
                            Name = "Rachunki"
                        },
                        new
                        {
                            Id = 5,
                            Color = "#27AE60",
                            Description = "Pensja i dodatkowe dochody",
                            IsActive = true,
                            Name = "Wynagrodzenie"
                        },
                        new
                        {
                            Id = 6,
                            Color = "#E67E22",
                            Description = "Lekarze, apteka, suplementy",
                            IsActive = true,
                            Name = "Zdrowie"
                        },
                        new
                        {
                            Id = 7,
                            Color = "#1ABC9C",
                            Description = "Ubrania, elektronika, inne",
                            IsActive = true,
                            Name = "Zakupy"
                        },
                        new
                        {
                            Id = 8,
                            Color = "#34495E",
                            Description = "Kursy, książki, szkolenia",
                            IsActive = true,
                            Name = "Edukacja"
                        });
                });

            modelBuilder.Entity("HouseBug.Models.MonthlyBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PlannedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Month", "Year", "CategoryId")
                        .IsUnique()
                        .HasDatabaseName("IX_MonthlyBudget_Period_Category");

                    b.ToTable("MonthlyBudgets");
                });

            modelBuilder.Entity("HouseBug.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsIncome")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("IX_Transaction_CategoryId");

                    b.HasIndex("Date")
                        .HasDatabaseName("IX_Transaction_Date");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("HouseBug.Models.MonthlyBudget", b =>
                {
                    b.HasOne("HouseBug.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HouseBug.Models.Transaction", b =>
                {
                    b.HasOne("HouseBug.Models.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HouseBug.Models.Category", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
